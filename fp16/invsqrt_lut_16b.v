//======================================================================
//
// WARNING: THIS MODULE IS AUTO-GENERATED BY generate_lut.py.
//          DO NOT EDIT THIS MODULE MANUALLY.
//          MANUAL EDITS WILL BE OVERWRITTEN ON THE NEXT SCRIPT RUN.
//
//======================================================================
// Verilog RTL Generated by generate_lut.py
// LUT for fp16 inverse square root initial guess.
// Function: 1/sqrt(M)
// M is constructed from the exponent LSB and mantissa MSBs.

module invsqrt_lut_16b (
    input  [4:0] addr,
    output reg [12:0] data
);

    // This is a large (32-entry) but synthesizable LUT.
    // It will typically be implemented as a ROM in an FPGA or ASIC.
    always @(*) begin
        case (addr)
                5'h00: data = 13'h1000;
                5'h01: data = 13'h0f85;
                5'h02: data = 13'h0f15;
                5'h03: data = 13'h0eae;
                5'h04: data = 13'h0e4f;
                5'h05: data = 13'h0df7;
                5'h06: data = 13'h0da5;
                5'h07: data = 13'h0d58;
                5'h08: data = 13'h0d10;
                5'h09: data = 13'h0ccc;
                5'h0a: data = 13'h0c8d;
                5'h0b: data = 13'h0c51;
                5'h0c: data = 13'h0c18;
                5'h0d: data = 13'h0be2;
                5'h0e: data = 13'h0baf;
                5'h0f: data = 13'h0b7e;
                5'h10: data = 13'h0b50;
                5'h11: data = 13'h0af9;
                5'h12: data = 13'h0aaa;
                5'h13: data = 13'h0a61;
                5'h14: data = 13'h0a1e;
                5'h15: data = 13'h09e0;
                5'h16: data = 13'h09a5;
                5'h17: data = 13'h096f;
                5'h18: data = 13'h093c;
                5'h19: data = 13'h090d;
                5'h1a: data = 13'h08e0;
                5'h1b: data = 13'h08b5;
                5'h1c: data = 13'h088d;
                5'h1d: data = 13'h0867;
                5'h1e: data = 13'h0843;
                5'h1f: data = 13'h0820;
            default: data = 13'h1000; // Should not be reached
        endcase
    end

endmodule
